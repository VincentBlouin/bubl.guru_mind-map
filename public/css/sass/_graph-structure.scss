/*
 * Copyright Vincent Blouin under the GPL License version 3
 */

$verticalBorderRadius: 18px;
$connectorRadius: 25px;

#drawn_graph {
  position: absolute;
  background: radial-gradient(rgba(0, 0, 255, 0) 5%, #0b46ff 100%);

}

.vertices-children-container {
  display: table-cell;
  vertical-align: middle;
}

.vertices-children-container.left-oriented .vertex-tree-container {
  float: right;
}

.vertex-tree-container {
  display: table;
  margin-left: 0;
  height: 1em;
  margin-top: -1px; /* margin top and bottom -1px so that both borders touch to make a continuous line */
  margin-bottom: -1px;
  border-radius: 26px;
  &.compare-add {
    background-color: $compareBubbleAddBackgroundColor;
  }
  &.compare-remove {
    background-color: $compareBubbleRemoveBackgroundColor;
  }
  &.drag-over {
    border-top: dashed red 3px;
    border-bottom: dashed red 3px;
    border-radius: 0;
  }
}

.clear-fix {
  clear: both;
  display: block;
  height: 0;
  width: 0;
  padding: 0;
  margin: 0;
}

.vertex-container {
  display: table-cell;
  vertical-align: middle;
  padding-top: 5px;
  padding-bottom: 5px;
}

.vertex.view-only {
  margin-top: 2em;
  margin-bottom: 2em;
}

/*BORDER*/
.left-oriented {
  &.vertices-children-container, .vertices-children-container {
    .vertex-tree-container {
      > .vertex-container {
        .relation.inverse {
          .connector {
            left: auto;
            right: -44px;
          }
        }
      }
      &:first-child {
        > .vertex-container {
          .property, .group-relation {
            .arrow {
              border-top-left-radius: 0;
              border-top-right-radius: $connectorRadius;
            }
          }
          .relation .connector {
            border-top-left-radius: 0;
          }
        }
        &:last-of-type {
          > .vertex-container {
            .property, .group-relation {
              .arrow {
                border-top-right-radius: 0;
                border-top-left-radius: 0;
              }
            }
          }
        }
      }
      &:last-of-type {
        > .vertex-container {
          .property, .group-relation {
            .arrow {
              border-top: none;
              top: calc(50% - 18px);
              border-bottom: $edgeStyle;
              border-bottom-left-radius: 0;
              border-bottom-right-radius: $connectorRadius;
            }
          }
          .relation {
            .connector {
              border-bottom-left-radius: 0;
            }
          }
        }
      }
    }
  }
}

.right-oriented {
  &.vertices-children-container, .vertices-children-container {
    .vertex-tree-container {
      &:first-child {
        > .vertex-container {
          .relation {
            &.inverse .connector{
              left: -41px;
            }
            .connector {
              border-top-right-radius: 0;
            }
          }
        }
      }
      &:last-of-type {
        > .vertex-container {
          .relation {
            &.inverse .connector{
              left: -41px;
            }
            .connector {
              border-bottom-right-radius: 0;
            }
          }
        }
      }
    }
  }
}

.vertices-children-container .vertex-tree-container {
  &:first-child {
    > .vertical-border-first {
      border-left: none;
      border-right: none;
    }
    > .vertical-border-second {
      border-top-right-radius: $verticalBorderRadius;
      border-top-left-radius: $verticalBorderRadius;
    }
    > .vertex-container {
      .connector {
        border-radius: $connectorRadius;
      }
      .property, .group-relation {
        .arrow {
          border-top-left-radius: $connectorRadius;
        }
      }
    }
    .property, .group-relation {
      .arrow {
        top: calc(50% - 2px);
      }
    }
    &:last-of-type {
      > .vertex-container {
        .connector {
          border-radius: 0;
        }
        .property, .group-relation {
          .arrow {
            border-radius: 0;
          }
        }
      }
    }
  }
  &:last-of-type {
    > .vertex-container {
      > .vertex:before {
        border-left: none;
        border-right: none;
      }
      .connector {
        border-radius: $connectorRadius;
        border-bottom: $edgeStyle;
        border-top: none;
        top: calc(50% - #{$relationConnectorHeight});
        &:before {
          top: 11px;
        }
      }
      .property, .group-relation {
        .arrow {
          border-top: none;
          top: calc(50% - 18px);
          border-bottom: $edgeStyle;
          border-bottom-left-radius: $connectorRadius;
        }
      }
      .property {
        .arrow {
          &:before {
            top: calc(50% + 1px);
            position: relative;
          }
        }
      }
    }
    > .vertical-border-first {
      border-bottom-right-radius: $verticalBorderRadius;
      border-bottom-left-radius: $verticalBorderRadius;
    }
    > .vertical-border-second {
      border-left: none;
      border-right: none;
    }
    > .vertical-border-third {
      border-left: none;
      border-right: none;
    }
    > .vertices-children-container > .vertex-tree-container > .vertex-container > .vertex > .arrow{
        top:calc(50% - 3px);
    }
  }
}

.vertical-border {
  display: table;
  height: 51%;
  border-left: $edgeStyle;
  padding-right: 40px;
}

.vertical-border.small {
  padding-right: 20px;
}

.vertices-children-container .vertex-tree-container .vertical-border-third {
  height: 0;
}

.vertical-border-filling {
  display: table;
  height: 0;
  padding: 0;
  width: $edgeSize;
}